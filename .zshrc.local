# Prompt
## Custom Fields
function virtual_env_prompt () {
	REPLY=${VIRTUAL_ENV+(${VIRTUAL_ENV:t}) }
}
grml_theme_add_token virtual-env -f virtual_env_prompt '%F{magenta}' '%f'
grml_theme_add_token host_full '%M ' '' ''
##
zstyle ':prompt:grml:*:items:user' pre '%F{red}'
zstyle ':prompt:grml:*:items:host_full' pre '%F{cyan}'
zstyle ':prompt:grml:*:items:path' pre '%F{yellow}'
zstyle ':prompt:grml:*:items:percent' pre '%f'
zstyle ':prompt:grml:left:setup' items rc change-root user at host_full path virtual-env vcs newline percent
zstyle ':prompt:grml:right:setup' items sad-smiley

# Variables
if type nvim > /dev/null 2>&1; then
	export SUDO_EDITOR=nvim
elif type vim > /dev/null 2>&1; then
	export SUDO_EDITOR=vim
fi

export GIT_EDITOR=vim

## Path
if [[ -d $HOME/.local/bin ]] && [[ ! :$PATH: =~ *:"$HOME/.local/bin":* ]]; then
	export PATH="$HOME/.local/bin:$PATH"
fi

[[ -r $HOME/.cargo/env ]] && . "$HOME/.cargo/env"
[[ -r $HOME/.opam/opam-init/init.zsh ]] && source $HOME/.opam/opam-init/init.zsh  &> /dev/null

if [ -f /usr/share/nvm/init-nvm.sh ]; then
	source /usr/share/nvm/init-nvm.sh
fi

# OS specific conf
case `uname -s` in
	"Darwin")
		[[ -r $HOME/.zshrc.osx ]] && . $HOME/.zshrc.osx
		;;
	"Linux")
		[[ -r $HOME/.zshrc.linux ]] && . $HOME/.zshrc.linux
		case `uname -r` in
			*"microsoft"*)
				[[ -r $HOME/.zshrc.wsl ]] && . $HOME/.zshrc.wsl
				;;
			*"valve"*)
				[[ -r $HOME/.zshrc.steamos ]] && . $HOME/.zshrc.steamos
				;;
			*);;
		esac
		;;
	*);;
esac

# Completion
## fzf
[ -f /usr/share/fzf/completion.zsh ] && . /usr/share/fzf/completion.zsh
[ -f /usr/share/fzf/key-bindings.zsh ] && . /usr/share/fzf/key-bindings.zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
## kubectl
if type kubectl &> /dev/null; then
	source <(kubectl completion zsh 2>/dev/null)
fi

# Aliases
if type eza &> /dev/null; then
	alias ls='eza'
	alias l='eza -l --git'
	alias ll='eza -l --git'
	alias lh='eza -lh --git'
	alias la='eza -lah --git'
	alias tree='eza -T'
elif type exa &> /dev/null; then
	alias ls='exa'
	alias l='exa -l --git'
	alias ll='exa -l --git'
	alias lh='exa -lh --git'
	alias la='exa -lah --git'
	alias tree='exa -T'
else
	alias ls='ls --color=auto'
	alias l='ls -l --color=auto'
	alias ll='ls -l --color=auto'
	alias lh='ls -lh --color=auto'
	alias la='ls -lah --color=auto'
	#alias tree='tree -C'
fi

if type bat &> /dev/null ; then
	alias cat='bat'
fi

if !type hostname &> /dev/null; then
	alias hostname='/bin/cat /etc/hostname; echo'
fi

alias up='cd ..'
alias refsh='exec `which zsh` -l'

# Functions
supp() {
	"$@" &> /dev/null < /dev/null
}

if type yt-dlp > /dev/null 2>&1; then
	youtube_mp3() {
		yt-dlp $1 -f bestaudio --extract-audio
	}
	youtube_mp4() {
		yt-dlp $1 -f "bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4]"
	}
fi

ssh-add-keys() {
	eval `ssh-agent -s`
	find ~/.ssh -type f -name "id_*" -not -name "*.pub" | xargs ssh-add
}

wol_home() {
	if [ -f $HOME/dotfiles/local/config.toml ]; then
		$HOME/dotfiles/scripts/wol.py
		echo "Magic packet is sended!"
	else
		echo "~/dotfiles/local/config.toml doesn't exist!"
	fi
}

ipmitool_on() {
	if [ ! -e `where ipmitool` ]; then
		echo "ipmitool not found"
		return 1
	fi
	if [ $# = 0 ]; then
		echo "Please specify hostname"
		return 1
	fi
	$HOME/dotfiles/scripts/ipmitool.py $1 "on"
}

ipmitool_off() {
	if [ ! -e `where ipmitool` ]; then
		echo "ipmitool not found"
		return 1
	fi
	if [ $# = 0 ]; then
		echo "Please specify hostname"
		return 1
	fi
	$HOME/dotfiles/scripts/ipmitool.py $1 "off"
}

# Import Scripts
if [ -d $HOME/dotfiles/scripts ];then
	for src in `find $HOME/dotfiles/scripts -type f -name "*.sh"`; do
		source ${src}
	done
fi

if [ -d $HOME/dotfiles/local ];then
	for src in `find $HOME/dotfiles/local -type f -name "*.sh"`; do
		source ${src}
	done
fi

